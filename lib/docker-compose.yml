version: '3.6'
services:
# ---------- DATABASES ----------
  mysql56:
    hostname: db
    image: mysql:5.6
    restart: always
    ports:
        - "3306:3306"
    volumes:
        - mysql56-data:/var/lib/mysql
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'

  mysql57:
    hostname: db
    image: mysql:5.7
    restart: always
    ports:
        - "3306:3306"
    volumes:
        - mysql57-data:/var/lib/mysql
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'

  mysql8:
    hostname: db
    image: mysql:8
    restart: always
    ports:
        - "3306:3306"
    volumes:
        - mysql8-data:/var/lib/mysql
    environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    command: mysqld --default-authentication-plugin=mysql_native_password

  redis:
    image: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

# ---------- KAFKA ----------
  zookeeper:
    image: confluentinc/cp-zookeeper
    # ports:
    #  - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    network_mode: host

  kafka-broker:
    image: confluentinc/cp-enterprise-kafka
    depends_on:
      - zookeeper
    # ports:
    #  - "9092:9092"
    network_mode: host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: localhost:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry
    depends_on:
      - zookeeper
      - kafka-broker
    # ports:
    #  - "8081:8081"
    network_mode: host
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'localhost:2181'

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest
    # ports:
    #  - "8082:8082"
    network_mode: host
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://localhost:8081/
      KAFKA_REST_HOST_NAME: localhost
      KAFKA_REST_BOOTSTRAP_SERVERS: localhost:9092
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
    depends_on:
      - zookeeper
      - kafka-broker
      - schema-registry

  lenses:
    image: lensesio/lenses
    depends_on:
      - schema-registry
    environment:
      LENSES_PORT: 9991
      LENSES_KAFKA_BROKERS: 'PLAINTEXT://localhost:9092'

      # If you use AVRO, configure the Schema Registry
      LENSES_SCHEMA_REGISTRY_URLS: |
        [
          {url:"http://localhost:8081"}
        ]

      # # If you use Kafka Connect, configure the workers.
      # LENSES_KAFKA_CONNECT_CLUSTERS: |
      #   [
      #     {
      #       name:"data_science",
      #       urls: [
      #         {url:"http://connect.worker.1.url:8083"},
      #         {url:"http://connect.worker.2.url:8083"}
      #       ],
      #       statuses:"connect-statuses-cluster-a",
      #       configs:"connect-configs-cluster-a",
      #       offsets:"connect-offsets-cluster-a"
      #     }
      #   ]

      # # Zookeeper access is optional
      # LENSES_ZOOKEEPER_HOSTS: |
      #   [
      #     {url:"localhost:2181"},
      #   ]

      # Users are managed within Lenses. Here you can change the superuser username:
      LENSES_SECURITY_USER: admin
      # Users are managed within Lenses. Here you can change the superuser password:
      LENSES_SECURITY_PASSWORD: admin

      # Register and get a key here https://lenses.io/box/
      # EULA: http://dl.lenses.io/d/?id=a89dff2d-e640-4e1c-965b-e581a5249658
    # ports:
    #  - 9991:9991
    #   - 9102:9102
    network_mode: host
    volumes:
      - ./license.json:/license.json

  # kafkateria:
  #   image: 421990735784.dkr.ecr.us-east-1.amazonaws.com/flipp-kafkateria:staging-latest
  #   hostname: kafkateria
  #   # ports:
  #   #  - "3000:4000"
  #   depends_on:
  #     - schema-registry
  #   environment:
  #     SCHEMA_REGISTRY: 'http://localhost:8081'
  #     KAFKA_SEED_BROKER: 'localhost:9092'
  #     WAIT_FOR_FILES: 'true'
  #   volumes:
  #     - kafkateria-data:/var/app/external

volumes:
  mysql56-data:
  mysql57-data:
  mysql8-data:
  redis-data:
